---
# mongo configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
  namespace: {{ .Release.Namespace }}
data:
  init-mongo.sh: |
    mongo -- "accord_pods" <<EOF
        var rootUser = '$MONGO_INITDB_ROOT_USERNAME';
        var rootPassword = '$MONGO_INITDB_ROOT_PASSWORD';
        var admin = db.getSiblingDB('admin');
        admin.auth(rootUser, rootPassword);

        var user = '$MONGO_USER';
        var passwd = '$MONGO_PASSWORD';
        db.createUser({user: user, pwd: passwd, roles: ["readWrite"]});
    EOF
---
# mongo deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: {{ .Release.Namespace }}
spec:
#  serviceName: mongo
#  replicas: 1
#  updateStrategy:
#    type: RollingUpdate
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: "{{ .Values.images.mongo.repository }}:{{ .Values.images.mongo.tag }}"
        args:
          - "mongod"
        ports:
        - name: mongo
          containerPort: 27017
          protocol: TCP
        volumeMounts:
        - name: mongo-pvc
          mountPath: /data/db
        - name: mongodb-scripts
          mountPath: /docker-entrypoint-initdb.d
        env:
        # Env for official dockerhub image
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_USER
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_PASSWORD
      volumes:
      - name: mongodb-scripts
        configMap:
          name: mongo-config
          items:
          - key: init-mongo.sh
            path: init-mongo.sh
      - name: mongo-pvc
        persistentVolumeClaim:
          claimName: mongo-pvc
---
# mongo volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.volumeClass }}
  resources:
    requests:
      storage: {{ .Values.volumes.mongo.size }}
---
# mongo service definition
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: {{ .Release.Namespace }}
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
#  clusterIP: None
  selector:
    app: mongo
